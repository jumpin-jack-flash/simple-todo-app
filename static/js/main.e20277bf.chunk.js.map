{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","id","title","completed","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","key","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","response","filter","addTodoItem","post","data","get","headerSpan","ReactDOM","render","document","getElementById"],"mappings":"kQA0BeA,E,qLAtBPC,MAAM,+B,+BAEA,IAAD,SAO8BC,KAAKC,MAAMC,KAApCC,EAPL,EAOKA,GAAIC,EAPT,EAOSA,MAAOC,EAPhB,EAOgBA,UACrB,OACI,wBAAIC,UAAU,aACV,2BAAOC,KAAK,WAAWC,QAASH,EAAWI,SAAU,WAAO,EAAKR,MAAMS,kBAAkBP,MACzF,4BAAQQ,QAAS,WAAO,EAAKV,MAAMW,gBAAgBT,KAAnD,UACA,0BAAMU,MAAOR,EAXE,CACnBS,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAO8B,MACrCb,Q,GAjBEc,IAAMC,WCkBdC,E,uKAhBD,IAAD,OACL,OACI,6BACKpB,KAAKC,MAAMoB,MAAMC,KAAI,SAAApB,GAAI,OACtB,kBAAC,EAAD,CACIqB,IAAKrB,EAAKC,GACVD,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,0B,GAT5BM,IAAMC,WCefK,E,uKAVP,OACI,4BAAQX,MALQ,CAChBY,QAAS,SACTC,WAAY,QAIR,wBAAIb,MAAO,CAAEc,SAAU,OAAQC,aAAc,SAA7C,mB,GARKT,a,QCqCNU,E,4MApCXC,MAAQ,CACJ1B,MAAO,I,EAEXK,SAAW,SAAAsB,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAGlCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKpC,MAAMqC,aAAa,EAAKR,MAAM1B,OACnC,EAAK4B,SAAS,CACV5B,MAAO,M,uDAIX,OACI,0BAAMmC,SAAUvC,KAAKoC,aAAc9B,UAAU,kBACzC,2BACIC,KAAK,OACLD,UAAU,aACVkC,YAAY,cACZL,MAAOnC,KAAK8B,MAAM1B,MAClBK,SAAUT,KAAKS,SACfyB,KAAK,UAET,2BACI3B,KAAK,SACLD,UAAU,eACV6B,MAAM,a,GA9BFhB,a,gBC0DTsB,E,4MArDXX,MAAQ,CACJT,MAAO,GACPqB,MAAM,G,EAEVC,aAAe,SAAAxC,GACX,EAAK6B,SAAS,CACVX,MAAO,EAAKS,MAAMT,MAAMC,KAAI,SAAApB,GAIxB,OAHIA,EAAKC,KAAOA,IACZD,EAAKG,WAAaH,EAAKG,WAEpBH,KAEXwC,MAAO,EAAKZ,MAAMY,Q,EAG1BE,QAAU,SAAAzC,GACN0C,IAAMC,OAAN,qDAA2D3C,IACtD4C,MAAK,SAAAC,GACF,EAAKhB,SAAS,CACVX,MAAO,EAAKS,MAAMT,MAAM4B,QAAO,SAAA/C,GAC3B,OAAOA,EAAKC,KAAOA,W,EAKvC+C,YAAc,SAAA9C,GACVyC,IAAMM,KAAK,6CAA8C,CACrD/C,MAAOA,EACPC,WAAW,IAEd0C,MAAK,SAAAC,GAAQ,OAAI,EAAKhB,SAAS,CAC5BX,MAAM,GAAD,mBAAM,EAAKS,MAAMT,OAAjB,CAAwB2B,EAASI,a,kEAGzB,IAAD,OAChBP,IAAMQ,IAAI,uDACLN,MAAK,SAAAC,GAAQ,OAAI,EAAKhB,SAAS,CAACX,MAAO2B,EAASI,Y,+BAGrD,OACI,yBAAK9C,UAAU,aACX,kBAAC,EAAD,CAAQgD,WAAYtD,KAAK8B,MAAMY,OAC/B,kBAAC,EAAD,CAAWJ,aAActC,KAAKkD,cAC9B,kBAAC,EAAD,CACI7B,MAAOrB,KAAK8B,MAAMT,MAClBX,kBAAmBV,KAAK2C,aACxB/B,gBAAiBZ,KAAK4C,e,GA/Cd1B,IAAMC,W,MCAlCoC,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,W","file":"static/js/main.e20277bf.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n    componentWillUnmount() {\r\n        alert(\"Item about to be deleted!\")\r\n    }\r\n    render() {\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n          }\r\n          const { id, title, completed } = this.props.todo\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input type=\"checkbox\" checked={completed} onChange={() => {this.props.handleChangeProps(id)}} />\r\n                <button onClick={() => {this.props.deleteTodoProps(id)}}>Delete</button>\r\n                <span style={completed ? completedStyle : null}>\r\n                    {title}\r\n                </span>\r\n            </li>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps={this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList","import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        const headerStyle = {\r\n            padding: \"20px 0\",\r\n            lineHeight: \"2em\"\r\n        }\r\n        return (\r\n            <header style={headerStyle}>\r\n                <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n                    To Do List\r\n                </h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, {Component} from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    }\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.addTodoProps(this.state.title)\r\n        this.setState({\r\n            title: \"\"\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Add Todo...\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                    name=\"title\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"input-submit\"\r\n                    value=\"Add\"\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport axios from \"axios\"\r\n\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos: [],\r\n        show: false\r\n    }\r\n    handleChange = id => {\r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }\r\n                return todo\r\n            }),\r\n            show: !this.state.show\r\n        }) \r\n    }\r\n    delTodo = id => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    todos: this.state.todos.filter(todo => { \r\n                        return todo.id !== id\r\n                    })\r\n                })\r\n            })\r\n    }\r\n    addTodoItem = title => {\r\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n            title: title,\r\n            completed: false\r\n        })\r\n        .then(response => this.setState({\r\n            todos: [...this.state.todos, response.data]\r\n        }))\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\r\n            .then(response => this.setState({todos: response.data}))\r\n    } \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header headerSpan={this.state.show} />\r\n                <InputTodo addTodoProps={this.addTodoItem} />\r\n                <TodosList \r\n                    todos={this.state.todos}\r\n                    handleChangeProps={this.handleChange}\r\n                    deleteTodoProps={this.delTodo}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}